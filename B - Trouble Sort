import java.util.*;
import java.io.*;

public class TroubleSort {

    public static void main(String[] args) {
        FastReader fr = new FastReader();
        int test_case = fr.nextInt();
        while (test_case-- != 0) {
            int n = fr.nextInt();
            int arr[] = new int[n];
            int type[] = new int[n];
            for (int i = 0; i < n; i++) {
                arr[i] = fr.nextInt();
            }
            int count_0 = 0;
            int count_1 = 0;
            for (int i = 0; i < n; i++) {
                type[i] = fr.nextInt();
                if (type[i] == 0) {
                    count_0++;
                } else {
                    count_1++;
                }
            }
            boolean flag = true;
            for (int i = 0; i < n - 1; i++) {
                if (arr[i] > arr[i + 1]) {
                    flag = false;
                    break;
                }
            }
            if (flag || (count_0 > 0 && count_1 > 0)) {
                System.out.println("Yes");
            } else {
                System.out.println("No");
            }
        }
    }

    static class FastReader {
        BufferedReader br;
        StringTokenizer st;

        public FastReader() {
            br = new BufferedReader(new InputStreamReader(System.in));
        }

        String next() {
            while (st == null || !st.hasMoreElements()) {
                try {
                    st = new StringTokenizer(br.readLine());
                } catch (IOException e) {
                    e.printStackTrace();
                }
            }
            return st.nextToken();
        }

        int nextInt() {
            return Integer.parseInt(next());
        }

        long nextLong() {
            return Long.parseLong(next());
        }

        double nextDouble() {
            return Double.parseDouble(next());
        }

        String nextLine() {
            String str = "";
            try {
                str = br.readLine();
            } catch (IOException e) {
                e.printStackTrace();
            }
            return str;
        }
    }
}
