import java.io.BufferedReader; 
import java.io.IOException; 
import java.io.InputStreamReader; 
import java.util.Scanner; 
import java.util.StringTokenizer;
import java.util.*;
public class codeforcesC{
   static class FastReader 
    { 
        BufferedReader br; 
        StringTokenizer st; 
 
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
 
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
 
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
 
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
 
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
 
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
   } 
   public static void main(String args[]){
      FastReader sc=new FastReader();
       List<Long> list=new ArrayList<>();long p=1;
        for(int i=0;i<62;i++){
           list.add(p);p=p*2;
        }
        List<Long> al=new ArrayList<>();
        al.add((long)1);
        for(int i=1;i<62;i++){
           al.add(al.get(i-1)*(long)2+(long)1);
        }
        int t=sc.nextInt();
        StringBuilder sb=new StringBuilder();
        while(t-->0){
           long n=sc.nextLong();
           long ans=0;
           while(n!=0){
           for(int i=0;i<list.size();i++){
                if(list.get(i)>n){
                   n=n-list.get(i-1);
                   ans+=al.get(i-1);break;
                }
            }
         }
         
               sb.append(ans+"\n");
               
        }
        System.out.print(sb.toString());
   }
}
