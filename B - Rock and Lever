import java.util.*;
import java.lang.*;
import java.io.*;
public class a {
    static final int mod = 1000000007;
    static FastReader sc = new FastReader();
    static PrintWriter out = new PrintWriter(System.out);
    public static void main (String[] args) throws java.lang.Exception {        
        int t = sc.nextInt();        
        while(t-->0) {
            int n = sc.nextInt();
            long arr[] = new long[32];
            for ( int i = 0 ; i < n; i++) {
                int a = sc.nextInt();
                int cnt = 0 ;
                while(a > 0) {
                    cnt++;
                    a >>= 1;
                }
                arr[cnt-1]++;
            }
            long cnt = 0 ;
            for ( int i  = 0 ; i < 32 ; i++) {
                cnt += arr[i]*(arr[i]-1)/2 ;
            }
            out.println(cnt);
        }
        out.flush();
    }
}
class FastReader{ 
     
        BufferedReader br; 
        StringTokenizer st; 
  
        public FastReader() 
        { 
            br = new BufferedReader(new
                     InputStreamReader(System.in)); 
        } 
  
        String next() 
        { 
            while (st == null || !st.hasMoreElements()) 
            { 
                try
                { 
                    st = new StringTokenizer(br.readLine()); 
                } 
                catch (IOException  e) 
                { 
                    e.printStackTrace(); 
                } 
            } 
            return st.nextToken(); 
        } 
  
        int nextInt() 
        { 
            return Integer.parseInt(next()); 
        } 
  
        long nextLong() 
        { 
            return Long.parseLong(next()); 
        } 
  
        double nextDouble() 
        { 
            return Double.parseDouble(next()); 
        } 
  
        String nextLine() 
        { 
            String str = ""; 
            try
            { 
                str = br.readLine(); 
            } 
            catch (IOException e) 
            { 
                e.printStackTrace(); 
            } 
            return str; 
        } 
    }
