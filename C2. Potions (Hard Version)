
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.PriorityQueue;
import java.util.StringTokenizer;

public class C1_Potions_Easy_Version {

       static Scanner in=new Scanner();
        
    static PrintWriter out=new PrintWriter(System.out);
    
    static int n;
    
    static int a[];
    
   // static List<Integer> positive=new ArrayList<>();
    
  //  static List<Integer> negative=new ArrayList<>();
    
    public static void main(String[] amit) throws IOException {
        
        n=in.nextInt();
        
        a=new int[n];
       
        long sum=0;
        
        PriorityQueue<Integer> pq=new PriorityQueue<>(); 
        
      for(int i=0;i<n;i++){
          
          a[i]=in.nextInt();
          
          sum+=a[i];
          
          pq.add(a[i]);
          
          while(sum<0){
              
              int x=pq.poll();
              
              sum-=x;
              
          }
          
      }
       
      out.println(pq.size());
      out.flush();
      
    }
    
     static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {
        
            in=new BufferedReader(new InputStreamReader(System.in));
            
        }
        
        String next() throws IOException{
            
            while(st==null || !st.hasMoreElements()){
                
                st=new StringTokenizer(in.readLine());
                
            }
            
            return st.nextToken();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt(next());
            
        }
        
        long nextLong() throws IOException{
            
            return Long.parseLong(next());
            
        }
        
        double nextDouble() throws IOException{
            
            return Double.parseDouble(next());
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
    }    
    
}
/*

6
4 -4 1 -3 1 -3


*/

/*

12
-3 -3 -7 -7 -1 -7 3 3 -2 -1 0 -7

*/

/*

8
1 4 -5 0 -2 -3 -2 1

*/
