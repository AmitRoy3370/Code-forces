/*
stream Butter!
eggyHide eggyVengeance
I need U
xiao rerun when
 */
import static java.lang.Math.max;
import static java.lang.Math.min;
import static java.lang.Math.abs;
import static java.lang.System.out;
import java.util.*;
import java.io.*;
import java.math.*;

public class x1523B
{
    public static void main(String hi[]) throws Exception
    {
        BufferedReader infile = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(infile.readLine());
        int T = Integer.parseInt(st.nextToken());
        StringBuilder sb = new StringBuilder();
        while(T-->0)
        {
            st = new StringTokenizer(infile.readLine());
            int N = Integer.parseInt(st.nextToken());
            int[] arr = readArr(N, infile, st);
            //array doesnt matter lol
            ArrayList<Integer> moves = new ArrayList<Integer>();
            for(int i=1; i <= N/2; i++)
            {
                int j = i+N/2;
                for(int lol=0; lol < 2; lol++)
                {
                    add(moves, 1, i, j);
                    add(moves, 2, i, j);
                    add(moves, 1, i, j);
                }
            }
            sb.append(moves.size()/3+"\n");
            for(int i=0; i < moves.size(); i+=3)
                sb.append(moves.get(i)+" "+moves.get(i+1)+" "+moves.get(i+2)+"\n");
        }
        System.out.print(sb);
    }
    public static void add(ArrayList<Integer> moves, int type, int i, int j)
    {
        moves.add(type);
        moves.add(i);
        moves.add(j);
    }
    public static int[] readArr(int N, BufferedReader infile, StringTokenizer st) throws Exception
    {
        int[] arr = new int[N];
        st = new StringTokenizer(infile.readLine());
        for(int i=0; i < N; i++)
            arr[i] = Integer.parseInt(st.nextToken());
        return arr;
    }
}
