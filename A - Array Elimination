import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class Main {
	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer("");
		PrintWriter pw = new PrintWriter(System.out);
		int t = Integer.parseInt(br.readLine());
		while (t-- > 0) {
			int n = Integer.parseInt(br.readLine());
			long a[] = new long[n];
			st = new StringTokenizer(br.readLine());
			for (int i = 0; i < n; i++) {
				a[i] = Long.parseLong(st.nextToken());
			}
			boolean isallzero = true;
			;
			for (int i = 0; i < n; i++) {
				isallzero &= a[i] == 0l;
			}
			if (isallzero) {
				for (int i = 1; i <= n; i++) {
					pw.print(i + " ");
				}
				pw.println();
				continue;
			}
			ArrayList<Integer> ans = new ArrayList<Integer>();
			for (int i = 0; i < 30; i++) {
				long x = 1 << i;
				int cnt = 0;
				for (int j = 0; j < n; j++) {
					if ((a[j] & x) != 0) {
						cnt++;
					}
				}
				if (cnt != 0) {
					ans.add(cnt);
				}
			}
			int gcd = ans.get(0);
			for(int x : ans) {
				gcd = __gcd(gcd, x);
			}
			for(int i = 1 ; i <= gcd ; i++) {
				if(gcd % i == 0) {
					pw.print(i + " ");
				}
			}
			pw.println();
		}
		pw.close();
	}

	public static int __gcd(int a, int b) {
		if (b != 0) {
			return __gcd(b, a % b);
		} else {
			return a;
		}
	}

	public static int lower_bound(ArrayList<Integer> ar, int k) {
		int s = 0;
		int e = ar.size();
		while (s != e) {
			int mid = s + e >> 1;
			if (ar.get(mid) < k) {
				s = mid + 1;
			} else {
				e = mid;
			}
		}
		if (s == ar.size()) {
			return -1;
		}
		return s;
	}

	public static int upper_bound(ArrayList<Integer> ar, int k) {
		int s = 0;
		int e = ar.size();
		while (s != e) {
			int mid = s + e >> 1;
			if (ar.get(mid) <= k) {
				s = mid + 1;
			} else {
				e = mid;
			}
		}
		if (s == ar.size()) {
			return -1;
		}
		return s;
	}
}
