import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

import static java.lang.Double.parseDouble;
import static java.lang.Integer.parseInt;
import static java.lang.Long.parseLong;
import static java.lang.System.in;

public class A709 {
	static class FastReader {
		BufferedReader br;
		StringTokenizer st;

		public FastReader() {
			br = new BufferedReader(new
					InputStreamReader(in));
		}

		String next() {
			while (st == null || !st.hasMoreElements()) {
				try {
					st = new StringTokenizer(br.readLine());
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
			return st.nextToken();
		}

		int nextInt() {
			return parseInt(next());
		}

		long nextLong() {
			return parseLong(next());
		}

		double nextDouble() {
			return parseDouble(next());
		}

		char nextChar() {
			int read = 0;
			try {
				read = br.read();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return (char) read;
		}

		String nextLine() {
			String str = "";
			try {
				str = br.readLine();
			} catch (IOException e) {
				e.printStackTrace();
			}
			return str;
		}
	}

	public static void main(String[] args) {
		FastReader fastReader = new FastReader();
		int n = fastReader.nextInt();
		int b = fastReader.nextInt();
		int d = fastReader.nextInt();
		int count = 0;
		int current = 0;
		for (int i = 0; i < n; i++) {
			int size = fastReader.nextInt();
			if (size <= b) {
				current+= size;
				if (current > d) {
					current = 0;
					count++;
				}
			}
		}
		System.out.println(count);
	}
}
