import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class D_Lecture_Sleep {

       static Scanner in=new Scanner();
    
    static PrintWriter out=new PrintWriter( new OutputStreamWriter(System.out) );
     
    static int n,k;

    static String a1,b;
    
    static int a[];
    
    static int t[];
    
    static void solve(){
        
        long ans=0,val=0;
            
            for(int i=0;i<n;i++){
                
               ans+=t[i]*a[i];
               
               if(t[i]==0 && i<k ){
                   
                   val+=a[i];
                   
                   
               }
                
            }
            
            long max=val;
            
            for(int i=k;i<n;i++){
                
                if( t[i-k]==0 ){
                    
                    val-=a[i-k];
                    
                }
                
                if(t[i]==0){
                    
                    val+=a[i];
                    
                }
                
                max=Math.max( max,val );
                
            }
            
        out.println( (ans+max) );
        out.flush();
        
    }
    
    public static void main(String[] amit) throws IOException {
        
      n=in.nextInt();
      
      k=in.nextInt();
      
      a=new int[n];
      
      t=new int[n];
      
      for(int i=0;i<n;i++){
          
          a[i]=in.nextInt();
          
      }
      
      for(int i=0;i<n;i++){
          
          t[i]=in.nextInt();
          
      }
        
        solve();
        
    }
    
    static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {
        
            in=new BufferedReader( new InputStreamReader(System.in) );
            
        }
        
        String next() throws IOException{
            
            while(st==null || !st.hasMoreElements()){
                
                st=new StringTokenizer(in.readLine());
                
            }
            
            return st.nextToken();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt(next());
            
        }
        
        long nextLong() throws IOException{
            
            return Long.parseLong(next());
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
        
        char nextChar() throws IOException{
            
            return next().charAt(0);
            
        }
        
        double nextDouble() throws IOException{
            
            return Double.parseDouble(next());
            
        }
        
        float nextFloat() throws IOException{
            
            return Float.parseFloat(next());
            
        }
        
        boolean nextBoolean() throws IOException{
            
            return Boolean.parseBoolean(next());
            
        }
        
        void close() throws IOException{
            
            in.close();
            
        }
        
    }
    
}
/*

6 3
1 3 5 2 5 4
1 1 0 1 0 0



*/
