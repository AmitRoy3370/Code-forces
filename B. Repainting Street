import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.StringTokenizer;
import java.util.Set;
import java.util.HashSet;

public class MyClass {
    
    	 static Scanner in=new Scanner();
	
	static PrintWriter out=new PrintWriter(System.out);
	
	static int n,testCases,k;
	
	static int a[];

static void solve(){
    
    Set<Integer> set=new HashSet<>();
    
    for(int i: a){
        
        set.add(i);
        
    }
    
    int ans=Integer.MAX_VALUE;
    
   for(int i:set ){
       
       int d=0;
       
       for(int j=0;j<n;j++){
           
           if(i!=a[j]){
               
               d++;
               
               j+=k-1;
               
           }
           
       }
       
       ans=Math.min( d,ans );
       
   }
    
    out.println(ans);
    out.flush();
    
}
    
    public static void main(String amit[]) throws IOException {
    
    testCases=in.nextInt();
    
    for(int t=0;t<testCases;t++){
        
        n=in.nextInt();
        
        k=in.nextInt();
        
        a=new int[n];
        
        for(int i=0;i<n;i++){
            
            a[i]=in.nextInt();
            
        }
        
        solve();
        
    }
    
    }

	static class Scanner{
        
        BufferedReader in;
        StringTokenizer st;

        public Scanner() {
        
            in=new BufferedReader( new InputStreamReader(System.in) );
            
        }
        
        String next() throws IOException{
            
            while(st==null || !st.hasMoreElements()){
                
                st=new StringTokenizer( in.readLine() );
                
            }
            
            return st.nextToken();
            
        }
        
        String nextLine() throws IOException{
            
            return in.readLine();
            
        }
        
        int nextInt() throws IOException{
            
            return Integer.parseInt(next());
            
        }
        
        double nextDouble() throws IOException{
            
            return Double.parseDouble( next() );
            
        }
        
        long nextLong() throws IOException{
            
            return Long.parseLong(next());
            
        }
        
    }
	
    
}


/*

6
6 4
2 1 1 1 1 2
10 5
1 1 1 2 2 1 2 2 1 1
9 6
1 2 3 1 2 3 1 2 3
1 1
100
10 10
1 100 2 99 3 98 4 97 5 96
8 1
50 50 50 50 50 50 50 50

*/
